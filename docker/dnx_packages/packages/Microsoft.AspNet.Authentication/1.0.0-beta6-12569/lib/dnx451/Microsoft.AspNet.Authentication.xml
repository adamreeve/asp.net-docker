<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Authentication</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.Authentication.AuthenticationHandler">
            <summary>
            Base class for the per-request work performed by most authentication middleware.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.AuthenticationHandler.TeardownAsync">
            <summary>
            Called once per request after Initialize and Invoke.
            </summary>
            <returns>async completion</returns>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.AuthenticationHandler.InvokeAsync">
            <summary>
            Called once by common code after initialization. If an authentication middleware responds directly to
            specifically known paths it must override this virtual, compare the request path to it's known paths, 
            provide any response information as appropriate, and true to stop further processing.
            </summary>
            <returns>Returning false will cause the common code to call the next middleware in line. Returning true will
            cause the common code to begin the async completion journey without calling the rest of the middleware
            pipeline.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.AuthenticationHandler.AuthenticateAsync">
            <summary>
            Causes the authentication logic in AuthenticateCore to be performed for the current request 
            at most once and returns the results. Calling Authenticate more than once will always return 
            the original value. 
            
            This method should always be called instead of calling AuthenticateCore directly.
            </summary>
            <returns>The ticket data provided by the authentication logic</returns>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.AuthenticationHandler.AuthenticateCoreAsync">
            <summary>
            The core authentication logic which must be provided by the handler. Will be invoked at most
            once per request. Do not call directly, call the wrapping Authenticate method instead.
            </summary>
            <returns>The ticket data provided by the authentication logic</returns>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.AuthenticationHandler.ApplyResponseAsync">
            <summary>
            Causes the ApplyResponseCore to be invoked at most once per request. This method will be
            invoked either earlier, when the response headers are sent as a result of a response write or flush,
            or later, as the last step when the original async call to the middleware is returning.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.AuthenticationHandler.ApplyResponseCoreAsync">
            <summary>
            Core method that may be overridden by handler. The default behavior is to call two common response 
            activities, one that deals with sign-in/sign-out concerns, and a second to deal with 401 challenges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.AuthenticationHandler.ApplyResponseGrantAsync">
            <summary>
            Override this method to dela with sign-in/sign-out concerns, if an authentication scheme in question
            deals with grant/revoke as part of it's request flow. (like setting/deleting cookies)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.AuthenticationHandler.ApplyResponseChallengeAsync">
            <summary>
            Override this method to deal with 401 challenge concerns, if an authentication scheme in question
            deals an authentication interaction as part of it's request flow. (like adding a response header, or
            changing the 401 result to 302 of a login page or external sign-in location.)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.AuthenticationHandler`1">
            <summary>
            Base class for the per-request work performed by most authentication middleware.
            </summary>
            <typeparam name="TOptions">Specifies which type for of AuthenticationOptions property</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.AuthenticationHandler`1.Initialize(`0,Microsoft.AspNet.Http.HttpContext,Microsoft.Framework.Logging.ILogger,Microsoft.Framework.WebEncoders.IUrlEncoder)">
            <summary>
            Initialize is called once per request to contextualize this instance with appropriate state.
            </summary>
            <param name="options">The original options passed by the application control behavior</param>
            <param name="context">The utility object to observe the current request and response</param>
            <param name="logger">The logging factory used to create loggers</param>
            <returns>async completion</returns>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.AuthenticationOptions">
            <summary>
            Base Options for all authentication middleware
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.AuthenticationOptions.AuthenticationScheme">
            <summary>
            The AuthenticationScheme in the options corresponds to the logical name for a particular authentication scheme. A different
            value may be assigned in order to use the same authentication middleware type more than once in a pipeline.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.AuthenticationOptions.AutomaticAuthentication">
            <summary>
            If true the authentication middleware alter the request user coming in and
            alter 401 Unauthorized responses going out. If false the authentication middleware will only provide
            identity and alter responses when explicitly indicated by the AuthenticationScheme.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.AuthenticationOptions.ClaimsIssuer">
            <summary>
            Gets or sets the issuer that should be used for any claims that are created
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.AuthenticationOptions.Description">
            <summary>
            Additional information about the authentication type which is made available to the application.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.AuthenticationTicket">
            <summary>
            Contains user identity information as well as additional authentication state.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.AuthenticationTicket.#ctor(Microsoft.AspNet.Http.Authentication.AuthenticationProperties,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Authentication.AuthenticationTicket"/> class
            </summary>
            <param name="properties">additional properties that can be consumed by the user or runtime.</param>
            <param name="authenticationScheme">the authentication middleware that was responsible for this ticket.</param>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.AuthenticationTicket.#ctor(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNet.Http.Authentication.AuthenticationProperties,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Authentication.AuthenticationTicket"/> class
            </summary>
            <param name="principal">the <see cref="T:System.Security.Claims.ClaimsPrincipal"/> that represents the authenticated user.</param>
            <param name="properties">additional properties that can be consumed by the user or runtime.</param>
            <param name="authenticationScheme">the authentication middleware that was responsible for this ticket.</param>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.AuthenticationTicket.AuthenticationScheme">
            <summary>
            Gets the authentication type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.AuthenticationTicket.Principal">
            <summary>
            Gets the claims-principal with authenticated user identities.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.AuthenticationTicket.Properties">
            <summary>
            Additional state values for the authentication session.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.CertificateSubjectKeyIdentifierValidator">
            <summary>
            Provides pinned certificate validation based on the subject key identifier of the certificate.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.CertificateSubjectKeyIdentifierValidator.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Authentication.CertificateSubjectKeyIdentifierValidator"/> class.
            </summary>
            <param name="validSubjectKeyIdentifiers">A set of subject key identifiers which are valid for an HTTPS request.</param>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.CertificateSubjectKeyIdentifierValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication.
            </summary>
            <param name="sender">An object that contains state information for this validation.</param>
            <param name="certificate">The certificate used to authenticate the remote party.</param>
            <param name="chain">The chain of certificate authorities associated with the remote certificate.</param>
            <param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
            <returns>A Boolean value that determines whether the specified certificate is accepted for authentication.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.CertificateSubjectPublicKeyInfoValidator">
            <summary>
            Implements a cert pinning validator passed on 
            http://datatracker.ietf.org/doc/draft-ietf-websec-key-pinning/?include_text=1
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.CertificateSubjectPublicKeyInfoValidator.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.AspNet.Authentication.SubjectPublicKeyInfoAlgorithm)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Authentication.CertificateSubjectPublicKeyInfoValidator"/> class.
            </summary>
            <param name="validBase64EncodedSubjectPublicKeyInfoHashes">A collection of valid base64 encoded hashes of the certificate public key information blob.</param>
            <param name="algorithm">The algorithm used to generate the hashes.</param>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.CertificateSubjectPublicKeyInfoValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Validates at least one SPKI hash is known.
            </summary>
            <param name="sender">An object that contains state information for this validation.</param>
            <param name="certificate">The certificate used to authenticate the remote party.</param>
            <param name="chain">The chain of certificate authorities associated with the remote certificate.</param>
            <param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
            <returns>A Boolean value that determines whether the specified certificate is accepted for authentication.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.CertificateThumbprintValidator">
            <summary>
            Provides pinned certificate validation based on the certificate thumbprint.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.CertificateThumbprintValidator.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Authentication.CertificateThumbprintValidator"/> class.
            </summary>
            <param name="validThumbprints">A set of thumbprints which are valid for an HTTPS request.</param>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.CertificateThumbprintValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Validates that the certificate thumbprints in the signing chain match at least one whitelisted thumbprint.
            </summary>
            <param name="sender">An object that contains state information for this validation.</param>
            <param name="certificate">The certificate used to authenticate the remote party.</param>
            <param name="chain">The chain of certificate authorities associated with the remote certificate.</param>
            <param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
            <returns>A Boolean value that determines whether the specified certificate is accepted for authentication.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.ClaimsTransformationAuthenticationHandler">
            <summary>
            Handler that applies ClaimsTransformation to authentication
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.ExternalAuthenticationOptions.SignInScheme">
            <summary>
            Gets or sets the authentication scheme corresponding to the default middleware
            responsible of persisting user's identity after a successful authentication.
            This value typically corresponds to a cookie middleware registered in the Startup class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.ICertificateValidator">
            <summary>
            Interface for providing pinned certificate validation, which checks HTTPS 
            communication against a known good list of certificates to protect against 
            compromised or rogue CAs issuing certificates for hosts without the 
            knowledge of the host owner.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.ICertificateValidator.Validate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication.
            </summary>
            <param name="sender">An object that contains state information for this validation.</param>
            <param name="certificate">The certificate used to authenticate the remote party.</param>
            <param name="chain">The chain of certificate authorities associated with the remote certificate.</param>
            <param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
            <returns>A Boolean value that determines whether the specified certificate is accepted for authentication.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.ISystemClock">
            <summary>
            Abstracts the system clock to facilitate testing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.ISystemClock.UtcNow">
            <summary>
            Retrieves the current system time in UTC.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.SecurityHelper">
            <summary>
            Helper code used when implementing authentication middleware
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.SecurityHelper.AddUserPrincipal(Microsoft.AspNet.Http.HttpContext,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Add all ClaimsIdenities from an additional ClaimPrincipal to the ClaimsPrincipal
            Merges a new claims principal, placing all new identities first, and eliminating
            any empty unauthenticated identities from context.User
            </summary>
            <param name="identity"></param>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.SubjectPublicKeyInfoAlgorithm">
            <summary>
            The algorithm used to generate the subject public key information blob hashes.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.SystemClock">
            <summary>
            Provides access to the normal system clock.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.SystemClock.UtcNow">
            <summary>
            Retrieves the current system time in UTC.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.Notifications.BaseContext`1">
            <summary>
            Base class used for certain event contexts
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.Notifications.BaseNotification`1.HandleResponse">
            <summary>
            Discontinue all processing for this request and return to the client.
            The caller is responsible for generating the full response.
            Set the <see cref="P:Microsoft.AspNet.Authentication.Notifications.BaseNotification`1.AuthenticationTicket"/> to trigger SignIn.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.Notifications.BaseNotification`1.SkipToNextMiddleware">
            <summary>
            Discontinue processing the request in the current middleware and pass control to the next one.
            SignIn will not be called.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.Notifications.BaseNotification`1.AuthenticationTicket">
            <summary>
            Gets or set the <see cref="P:Microsoft.AspNet.Authentication.Notifications.BaseNotification`1.AuthenticationTicket"/> to return if this notification signals it handled the notification.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Authentication.Notifications.EndpointContext`1">
            <summary>
            Base class used for certain event contexts
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.Notifications.EndpointContext`1.#ctor(Microsoft.AspNet.Http.HttpContext,`0)">
            <summary>
            Creates an instance of this context
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.Notifications.EndpointContext`1.IsRequestCompleted">
            <summary>
            True if the request should not be processed further by other components.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.Notifications.EndpointContext`1.RequestCompleted">
            <summary>
            Prevents the request from being processed further by other components. 
            IsRequestCompleted becomes true after calling.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.Notifications.MessageReceivedNotification`2.Token">
            <summary>
            Bearer Token. This will give application an opportunity to retrieve token from an alternation location.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Authentication.Notifications.NotificationResultState.Continue">
            <summary>
            Continue with normal processing.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Authentication.Notifications.NotificationResultState.Skipped">
            <summary>
            Discontinue processing the request in the current middleware and pass control to the next one.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Authentication.Notifications.NotificationResultState.HandledResponse">
            <summary>
            Discontinue all processing for this request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.Resources.Exception_DefaultDpapiRequiresAppNameKey">
            <summary>
            The default data protection provider may only be used when the IApplicationBuilder.Properties contains an appropriate 'host.AppName' key.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.Resources.FormatException_DefaultDpapiRequiresAppNameKey">
            <summary>
            The default data protection provider may only be used when the IApplicationBuilder.Properties contains an appropriate 'host.AppName' key.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.Resources.Exception_UnhookAuthenticationStateType">
            <summary>
            The state passed to UnhookAuthentication may only be the return value from HookAuthentication.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.Resources.FormatException_UnhookAuthenticationStateType">
            <summary>
            The state passed to UnhookAuthentication may only be the return value from HookAuthentication.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Authentication.Resources.Exception_AuthenticationTokenDoesNotProvideSyncMethods">
            <summary>
            The AuthenticationTokenProvider's required synchronous events have not been registered.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Authentication.Resources.FormatException_AuthenticationTokenDoesNotProvideSyncMethods">
            <summary>
            The AuthenticationTokenProvider's required synchronous events have not been registered.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Builder.ClaimsTransformationAppBuilderExtensions">
            <summary>
            Extension methods provided by the claims transformation authentication middleware
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNet.Builder.IApplicationBuilder)">
            <summary>
            Adds a claims transformation middleware to your web application pipeline.
            </summary>
            <param name="app">The IApplicationBuilder passed to your configuration method</param>
            <returns>The original app parameter</returns>
        </member>
        <member name="M:Microsoft.AspNet.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNet.Builder.IApplicationBuilder,System.Action{Microsoft.AspNet.Authentication.ClaimsTransformationOptions})">
            <summary>
            Adds a claims transformation middleware to your web application pipeline.
            </summary>
            <param name="app">The IApplicationBuilder passed to your configuration method</param>
            <param name="configureOptions">Used to configure the options for the middleware</param>
            <returns>The original app parameter</returns>
        </member>
        <member name="M:Microsoft.AspNet.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNet.Builder.IApplicationBuilder,System.Action{Microsoft.AspNet.Authentication.ClaimsTransformationOptions},System.String)">
            <summary>
            Adds a claims transformation middleware to your web application pipeline.
            </summary>
            <param name="app">The IApplicationBuilder passed to your configuration method</param>
            <param name="configureOptions">Used to configure the options for the middleware</param>
            <param name="optionsName">The name of the options class that controls the middleware behavior, null will use the default options</param>
            <returns>The original app parameter</returns>
        </member>
        <member name="M:Microsoft.Win32.NativeMethods.CryptEncodeObject(System.UInt32,System.IntPtr,Microsoft.Win32.NativeMethods.CERT_PUBLIC_KEY_INFO@,System.Byte[],System.UInt32@)">
            <summary>
            Encodes a structure of the type indicated by the value of the lpszStructType parameter.
            </summary>
            <param name="dwCertEncodingType">Type of encoding used.</param>
            <param name="lpszStructType">The high-order word is zero, the low-order word specifies the integer identifier for the type of the specified structure so
            we can use the constants in http://msdn.microsoft.com/en-us/library/windows/desktop/aa378145%28v=vs.85%29.aspx</param>
            <param name="pvStructInfo">A pointer to the structure to be encoded.</param>
            <param name="pbEncoded">A pointer to a buffer to receive the encoded structure. This parameter can be NULL to retrieve the size of this information for memory allocation purposes.</param>
            <param name="pcbEncoded">A pointer to a DWORD variable that contains the size, in bytes, of the buffer pointed to by the pbEncoded parameter.</param>
            <returns></returns>
        </member>
    </members>
</doc>
