<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Hashing.Algorithms</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.HMACSHA1">
      <summary>使用 <see cref="T:System.Security.Cryptography.SHA1" /> 哈希函数计算基于哈希值的消息验证代码 (HMAC)。</summary>
    </member>
    <member name="M:System.Security.Cryptography.HMACSHA1.#ctor">
      <summary>使用随机生成的密钥初始化 <see cref="T:System.Security.Cryptography.HMACSHA1" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.HMACSHA1.#ctor(System.Byte[])">
      <summary>使用指定的密钥数据初始化 <see cref="T:System.Security.Cryptography.HMACSHA1" /> 类的新实例。</summary>
      <param name="key">
        <see cref="T:System.Security.Cryptography.HMACSHA1" /> 加密的机密密钥。密钥的长度不限，但如果该密钥是 64 个字节，就会经过散列处理（使用 SHA-1）以派生一个 64 个字节的密钥。因此，建议的密钥大小为 64 个字节。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 参数为 null。</exception>
    </member>
    <member name="T:System.Security.Cryptography.HMACSHA256">
      <summary>使用 <see cref="T:System.Security.Cryptography.SHA256" /> 哈希函数计算基于哈希值的消息验证代码 (HMAC)。</summary>
    </member>
    <member name="M:System.Security.Cryptography.HMACSHA256.#ctor">
      <summary>使用随机生成的密钥初始化 <see cref="T:System.Security.Cryptography.HMACSHA256" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.HMACSHA256.#ctor(System.Byte[])">
      <summary>使用指定的密钥数据初始化 <see cref="T:System.Security.Cryptography.HMACSHA256" /> 类的新实例。</summary>
      <param name="key">
        <see cref="T:System.Security.Cryptography.HMACSHA256" /> 加密的机密密钥。该密钥可以是任意长度。但是建议的大小为 64 个字节。如果键的长度超过 64 个字节，将对其进行哈希运算（使用 SHA-256）以派生出一个 64 字节的密钥。如果少于 64 个字节，就填充到 64 个字节。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 参数为 null。</exception>
    </member>
    <member name="T:System.Security.Cryptography.HMACSHA384">
      <summary>使用 <see cref="T:System.Security.Cryptography.SHA384" /> 哈希函数计算基于哈希值的消息验证代码 (HMAC)。</summary>
    </member>
    <member name="M:System.Security.Cryptography.HMACSHA384.#ctor">
      <summary>使用随机生成的密钥初始化 <see cref="T:System.Security.Cryptography.HMACSHA384" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])">
      <summary>使用指定的密钥数据初始化 <see cref="T:System.Security.Cryptography.HMACSHA384" /> 类的新实例。</summary>
      <param name="key">
        <see cref="T:System.Security.Cryptography.HMACSHA384" /> 加密的机密密钥。该密钥可以是任意长度。但是建议的大小为 128 个字节。如果键的长度超过 128 个字节，将对其进行哈希运算（使用 SHA-384）以派生出一个 128 字节的密钥。如果少于 128 个字节，就填充到 128 个字节。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 参数为 null。</exception>
    </member>
    <member name="T:System.Security.Cryptography.HMACSHA512">
      <summary>使用 <see cref="T:System.Security.Cryptography.SHA512" /> 哈希函数计算基于哈希值的消息验证代码 (HMAC)。</summary>
    </member>
    <member name="M:System.Security.Cryptography.HMACSHA512.#ctor">
      <summary>使用随机生成的密钥初始化 <see cref="T:System.Security.Cryptography.HMACSHA512" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])">
      <summary>使用指定的密钥数据初始化 <see cref="T:System.Security.Cryptography.HMACSHA512" /> 类的新实例。</summary>
      <param name="key">
        <see cref="T:System.Security.Cryptography.HMACSHA512" /> 加密的机密密钥。该密钥可以是任意长度。但是建议的大小为 128 个字节。如果键的长度超过 128 个字节，将对其进行哈希运算（使用 SHA-512）以派生出一个 128 字节的密钥。如果少于 128 个字节，就填充到 128 个字节。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 参数为 null。</exception>
    </member>
    <member name="T:System.Security.Cryptography.MD5">
      <summary>表示 <see cref="T:System.Security.Cryptography.MD5" /> 哈希算法的所有实现均从中继承的抽象类。</summary>
    </member>
    <member name="M:System.Security.Cryptography.MD5.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.MD5" /> 的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.MD5.Create">
      <summary>创建 <see cref="T:System.Security.Cryptography.MD5" /> 哈希算法的默认实现的实例。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.MD5" /> 哈希算法的新实例。</returns>
      <exception cref="T:System.Reflection.TargetInvocationException">该算法在使用中启用了联邦信息处理标准 (FIPS) 模式，但与 FIPS 不兼容。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.Cryptography.SHA1">
      <summary>计算输入数据的 <see cref="T:System.Security.Cryptography.SHA1" /> 哈希值。</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA1.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.SHA1" /> 的新实例。</summary>
      <exception cref="T:System.InvalidOperationException">针对此对象的策略不符合 FIPS 算法。</exception>
    </member>
    <member name="M:System.Security.Cryptography.SHA1.Create">
      <summary>创建 <see cref="T:System.Security.Cryptography.SHA1" /> 的默认实现的实例。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.SHA1" /> 的新实例。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.Cryptography.SHA256">
      <summary>计算输入数据的 <see cref="T:System.Security.Cryptography.SHA256" /> 哈希值。</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA256.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.SHA256" /> 的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA256.Create">
      <summary>创建 <see cref="T:System.Security.Cryptography.SHA256" /> 的默认实现的实例。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.SHA256" /> 的新实例。</returns>
      <exception cref="T:System.Reflection.TargetInvocationException">该算法在使用中启用了联邦信息处理标准 (FIPS) 模式，但与 FIPS 不兼容。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.Cryptography.SHA384">
      <summary>计算输入数据的 <see cref="T:System.Security.Cryptography.SHA384" /> 哈希值。</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA384.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.SHA384" /> 的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA384.Create">
      <summary>创建 <see cref="T:System.Security.Cryptography.SHA384" /> 的默认实现的实例。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.SHA384" /> 的新实例。</returns>
      <exception cref="T:System.Reflection.TargetInvocationException">该算法在使用中启用了联邦信息处理标准 (FIPS) 模式，但与 FIPS 不兼容。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.Cryptography.SHA512">
      <summary>计算输入数据的 <see cref="T:System.Security.Cryptography.SHA512" /> 哈希值。</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA512.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.SHA512" /> 的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA512.Create">
      <summary>创建 <see cref="T:System.Security.Cryptography.SHA512" /> 的默认实现的实例。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.SHA512" /> 的新实例。</returns>
      <exception cref="T:System.Reflection.TargetInvocationException">该算法在使用中启用了联邦信息处理标准 (FIPS) 模式，但与 FIPS 不兼容。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
  </members>
</doc>